apply plugin: 'com.android.application'
apply plugin: 'com.github.triplet.play'
apply plugin: 'com.getkeepsafe.dexcount'
apply from: '../scripts/CliqzConfig.gradle'
apply from: 'cliqz.gradle'

android {
    compileSdkVersion compile_sdk_version 
    buildToolsVersion "26.0.2"
    compileOptions.encoding = "UTF-8"

    defaultConfig {
        targetSdkVersion 23
        minSdkVersion 16
        versionCode 100
        versionName "1.7.3.1"
        multiDexEnabled true

        buildConfigField 'String', 'LIGHTNING_VERSION_NAME', '"4.2.3.1"'
        buildConfigField "int", "MINIMUM_WEBVIEW_VERSION", "55"

        applicationId "com.cliqz.browser"
        testInstrumentationRunner "com.cliqz.browser.test.CustomTestRunner"
        vectorDrawables.useSupportLibrary = true
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            shrinkResources false
            proguardFiles 'proguard-project.txt'
            applicationIdSuffix '.debug'
            versionNameSuffix '-debug'
        }

        release {
            minifyEnabled false
            proguardFile getDefaultProguardFile('proguard-android.txt')
            shrinkResources false
            proguardFiles 'proguard-project.txt'
        }
    }
    packagingOptions {
        exclude '.readme'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude "lib/arm64-v8a/**"
        exclude "lib/armeabi/**"
        exclude "lib/x86_64/**"
    }
    sourceSets {
        standard {
            java.srcDirs += [
                    'src/cliqz/java',
            ]
        }
        amazon {
            java.srcDirs += [
                    'src/standard/java',
                    'src/cliqz/java',
            ]
            res.srcDirs += [
                    'src/standard/res',
            ]
        }
        ghostery {
            java.srcDirs += [
                    'src/standard/java',
            ]
            res.srcDirs += [
                    'src/standard/res',
            ]
        }
        huawei {
            java.srcDirs += [
                    'src/standard/java',
                    'src/cliqz/java',
            ]
            res.srcDirs += [
                    'src/standard/res',
            ]
        }
    }

    flavorDimensions "api", "abi"

    productFlavors {
        standard {
            dimension "api"
            versionCode 5
        }
        ghostery {
            dimension "api"
            versionCode 5
            // TODO use the original Ghostery application id
            applicationId 'com.cliqz.ghostery'
        }
        amazon {
            dimension "api"
            versionCode 8
        }
        x86 {
            dimension "abi"
            ndk {
                abiFilter "x86"
            }
            versionCode 5
        }
        arm {
            dimension "abi"
            ndk {
                abiFilter "armeabi-v7a"
            }
            versionCode 3
        }
        fat {
            dimension "abi"
            versionCode 1
        }
        huawei {
            dimension "api"
            versionCode 5
            applicationIdSuffix ".huawei"
        }
    }
}

dexcount {
    includeClasses = false
    includeFieldCount = false
    format = "tree"
    orderByMethodCount = true
    verbose = false
}

repositories {
    flatDir {
        dirs 'libs'
    }
    jcenter()
    maven {
        url "https://maven.google.com"
    }
}

configurations.all {
  resolutionStrategy {
      force "com.android.support:support-v4:${support_lib_version}"
      force "com.android.support:appcompat-v7:${support_lib_version}"
      force "com.android.support:support-annotations:${support_lib_version}"
      force "com.google.code.findbugs:jsr305:3.0.0"
  }
}

dependencies {

    // support libraries
    implementation "com.android.support:support-v4:${support_lib_version}"
    implementation "com.android.support:cardview-v7:${support_lib_version}"
    implementation "com.android.support:design:${support_lib_version}"
    implementation "com.android.support:support-vector-drawable:${support_lib_version}"
    implementation "com.android.support:animated-vector-drawable:${support_lib_version}"
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation "com.android.support:appcompat-v7:${support_lib_version}"

    implementation 'com.readystatesoftware.systembartint:systembartint:1.0.3'

    // event bus
    implementation name:'nove-0.2.1000'
    annotationProcessor 'com.cliqz:nove-compiler:0.2.0'
    
    // dependency injection
    implementation 'com.android.support:multidex:1.0.1'
    implementation 'com.google.dagger:dagger:2.11'
    implementation 'com.google.dagger:dagger-android-support:2.11'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.11'
    compileOnly 'javax.annotation:jsr250-api:1.0'
    
    // view binding
    annotationProcessor 'com.jakewharton:butterknife:7.0.1'
    implementation 'com.jakewharton:butterknife:7.0.1'

    // native fs support for React-Native
    implementation project(':react-native-fs')
    
    // sqlite support for React-Native
    implementation project(':react-native-sqlite2')
    implementation project(':WebRTCModule')

    // react native screenshot view
    implementation project(':react-native-view-shot')

    // react native share card
    implementation project(':react-native-share')

    // user agent
    implementation project(':react-native-user-agent-react-native-user-agent')
    
    // Utils libraries
    implementation project(':utils')
    implementation project(':android_utils')
    
    // On-boarding
    implementation 'com.github.deano2390:MaterialShowcaseView:1.2.0@aar'
    
    // memory leak analysis
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    androidTestImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    
    // Google Play Services
    implementation 'com.google.android.gms:play-services-gcm:9.4.0'
    
    // React-Native
    implementation 'com.facebook.react:react-native:+'
    
    // AWS SNS SDK
    implementation 'com.amazonaws:aws-android-sdk-sns:2.+'
    implementation 'com.amazonaws:aws-android-sdk-cognito:2.+'
    
    // Barcode scanner
    implementation 'com.google.zxing:core:3.3.0'

    // Fresco
    implementation 'com.facebook.fresco:fresco:1.4.0'

    // MiniBloomFilter
    implementation 'com.github.cliqz-oss:minibloomfilter:1.0'
    
    // Ghostery chart support
    implementation 'com.github.PhilJay:MPAndroidChart:v3.0.2'
    
    // Testing-only dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation 'org.robolectric:robolectric:3.3.2'
    testImplementation 'org.eclipse.jetty:jetty-server:9.2.17.v20160517'
    
    // Forcing version
    androidTestImplementation "com.android.support:support-annotations:${support_lib_version}"
    androidTestImplementation 'com.android.support.test:runner:0.5'
    androidTestImplementation 'com.android.support.test:rules:0.5'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-web:2.2.2'
    androidTestImplementation 'org.eclipse.jetty:jetty-server:9.2.17.v20160517'
    androidTestImplementation 'com.android.support.test.espresso:espresso-intents:2.2.2'
    testImplementation 'org.apache.velocity:velocity:1.7'
}

preBuild << {
    android.applicationVariants.each { variant ->
        def apiVersion = variant.productFlavors.get(0).versionCode
        def abiVersion = variant.productFlavors.get(1).versionCode
        // set the composite code
        def generatedVersionCode = android.defaultConfig.versionCode * 100 + apiVersion * 10 + abiVersion
        variant.mergedFlavor.versionCode = generatedVersionCode
        variant.outputs.all { output ->
            output.setVersionCodeOverride(generatedVersionCode)
        }
    }
}

play {
    track = 'alpha'
}

apply plugin: 'com.google.gms.google-services'
